1. Real-world examples of each architecture pattern:

Layered Architecture:

The layered architecture is commonly used in software development for web-based applications. A prime example is the Spring Framework, which is utilised for building Java-based web applications. The Spring Framework adopts a four-layered architecture consisting of the presentation layer, business logic layer, persistence layer, and data access layer. This structured approach allows developers to create scalable, robust and flexible web applications capable of handing high traffic volumes. 

Repository Architecture:

A repository architecture enables multiple interfacing components to share the same data. A typical example is a database management system. Another illustration is a blackboard system, an artificial intelligence approach based on the blackboard architectural model. In this model, a common knowledge base is continually updated by various specialised knowledge sources, transforming an initial problem specification into a solution.

Client-Server Architecture:

This architecture is a system that hosts, provides and manages most of the resources and services requested by clients, also known as a networking computer model. A real-life example of this architecture is web servers. Customers access various websites hosted on these powerful servers over the internet. Businesses and individuals use client servers daily to engage with the digital world, allowing them to streamline operations effectively. 

Pipe and Filter Architecture:

This architecture is typically well-suited to very specific use-cases. The software functions as a pipeline, where data from a source flows linearly through filters that process the data. The connections between filters are the pipes, with the data eventually reaching the data sink. A real-life example of this architecture is the computer graphics pipeline. This framework in computer graphics outlines the steps required to transform a 3D scene into a 2D representation on a screen.


2. Give two examples of systems combining two or more patterns, and explain how these patterns complement each other.

Example 1: E-commerce Platform (Combining Layered Architecture and Client-Server Architecture.)

An e-commerce platform typically combines layered architecture and client-server architecture to handle complex operations. Combining these architectures allows the e-commerce platform to scale effectively, manage complex business logic, and ensure responsive user experience. The layered architecture organises the codebase, making it maintainable and scalable, while the client-server architecture enables robust interactions between the clients and the server.

Example 2: Content Management System (Combining Repository Architecture and Layered Architecture.)

A content management system often combines repository architecture and layered architecture to manage and serve content effectively. By combining these architectures a CMS system can efficiently manage and deliver content. The repository architecture ensures a centralised and consistent data store, making it easy to share and manage content across different components. The layered architecture organises the system in distinct layers, enhancing maintainability and scalability. 


I used the following resources to complete this task:

https://bitloops.com/docs/bitloops-language/learning/software-architecture/layered-architecture#:~:text=One%20such%20example%20is%20the,logic%2C%20and%20data%20access%20layers

chrome-extension://efaidnbmnnnibpcajpcglclefindmkaj/https://www.cs.toronto.edu/~jm/340S/PDF2/Styles2.pdf

https://www.codeproject.com/Questions/682701/repository-and-client-server-architecture

https://www.redswitches.com/blog/client-server-architecture/#Real-World-Examples-of-client-server-Architecture

https://medium.com/@tanyuryan/software-architecture-pipe-and-filter-899a7e00c1eb#:~:text=An%20example%20of%20this%20in,is%20the%20graphics%20rendering%20pipeline.&text=In%20this%20case%2C%20vertices%20and,the%20input%20of%20the%20next.

https://www.bigcommerce.com/articles/ecommerce-website-development/ecommerce-architecture/

https://www.red-gate.com/simple-talk/development/other-development/content-management-system-architecture/

