1. How does the waterfall methodology differ from agile?

Key differences between Waterfall vs. Agile:
Waterfall Methodology:
- Linear and Sequential: The Waterfall methodology follows a linear and sequential approach where each phase must be completed before moving onto the next.
- Documentation: It relies heavily on comprehensive documentation at each stage.
- Upfront planning: Detailed planning requirements are gathered upfront.
- Testing: Testing is typically done after each coding phase. 
- Flexibility: Changes are difficult to implement once the project is underway.
- Collaboration: It does not require pairs of developers. 

Agile Development:
- Iterative and Incremental: Projects are broken down into manageable units called sprints or iterations.
- Flexibility: It allows for changes throughout the project based on feedback and new requirements.
- Collaboration: Pairs of developers work together and team members swap between pairs which creates a sense of code ownership, ensuring a high quality product.
- Testing: Tests are designed before coding begins.
- Customer Involvement: Customer feedback is a core component.

In summary Waterfall is a more rigid and structured approach while Agile offers flexibility. 

2. Can you think of a situation in which one or more of the four "values" could get a software team into trouble?

Working software over comprehensive documentation: If the project reaches a mature stage and new features have been introduced throughout different versions of the programme and comprehensive documentation has not been kept, the development team could reach a stage where they do not understand everything that has been implemented. They could face knowledge gaps, maintenance challenges, dependancy issues and even potentially regulatory compliance. 

3. Describe the agile method in your own words:

The agile method is an expression used to describe a collection of iterative and incremental software development methodologies. It emphasises flexibility, collaboration and customer satisfaction. Agile breaks down projects into smaller, manageable units called sprints and iterations. Each sprint lasts a few weeks and results in a working version of the software.

4. Why do you think requirements change so much?

Requirements change as products develop and user uptake increases. The more user's there are the more a product evolves and in that process, new requirements present themselves to ensure that user satisfaction is maintained. 

5. Explain why first testing project features helps the programmer to develop a better understanding of the system requirements. 

By designing tests before writing the code developers must first fully understand the requirements to identify potential pitfalls and issues that may arise and successfully design tests for them. It helps them clarify the requirements and identify issues early. It also guides development and improves design as new features are required. 